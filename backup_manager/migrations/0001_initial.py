# Generated by Django 4.2.5 on 2023-09-29 12:30

from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0018_improve_crontab_helptext'),
    ]

    operations = [
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('dt_start', models.DateTimeField(blank=True, null=True)),
                ('dt_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PD', 'PENDING'), ('ST', 'STARTED'), ('SC', 'SUCCESS'), ('FL', 'FAILED'), ('MN', 'MANUAL'), ('SD', 'SCHEDULED')], default='PD', max_length=2)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, help_text='Default: "{project.name}_{environment.name}_{date_time}"', max_length=255)),
                ('path', models.CharField(max_length=255)),
                ('dt_create', models.DateTimeField(blank=True, help_text='Leave it _blank_ if the backup is to be done now  | Set it to a future date if the backup is to be scheduled  | Set it to a past date if the backup is already done')),
            ],
            options={
                'db_table': 'tb_backup',
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user', models.CharField(blank=True, help_text='Overwrite the user used in periodic tasks', max_length=255, null=True)),
                ('password', django_cryptography.fields.encrypt(models.CharField(blank=True, help_text='Overwrite the password of user used in periodic tasks (encrypted)', max_length=255, null=True))),
            ],
            options={
                'db_table': 'tb_database',
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tb_environment',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ip', models.CharField(max_length=255)),
                ('port', models.IntegerField()),
                ('user', models.CharField(blank=True, help_text='User used in periodic tasks', max_length=255, null=True)),
                ('password', django_cryptography.fields.encrypt(models.CharField(blank=True, help_text='Password of user used in periodic tasks (encrypted)', max_length=255, null=True))),
            ],
            options={
                'db_table': 'tb_host',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tb_project',
            },
        ),
        migrations.CreateModel(
            name='Restore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('dt_create', models.DateTimeField(auto_now_add=True)),
                ('dt_start', models.DateTimeField(blank=True, null=True)),
                ('dt_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PD', 'PENDING'), ('ST', 'STARTED'), ('SC', 'SUCCESS'), ('FL', 'FAILED'), ('MN', 'MANUAL'), ('SD', 'SCHEDULED')], default='PD', max_length=2)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(blank=True, help_text='Default: "{origin_backup} -> {destination_database}"', max_length=255)),
                ('destination_database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.database')),
                ('origin_backup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.backup')),
            ],
            options={
                'db_table': 'tb_restore',
            },
        ),
        migrations.CreateModel(
            name='PeriodicEnvironmentBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Default: "Backup {environment.name} [{self.periodic_task.crontab.human_readable}]"', max_length=255)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.environment')),
                ('periodic_task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.periodictask')),
            ],
            options={
                'db_table': 'tb_periodic_environment_backup',
            },
        ),
        migrations.CreateModel(
            name='PeriodicDatabaseBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Default: "Backup {database.project.name} - {database.environment.name} ({database.name}) [{self.periodic_task.crontab.human_readable}]"', max_length=255)),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.database')),
                ('periodic_task', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.periodictask')),
            ],
            options={
                'db_table': 'tb_periodic_database_backup',
            },
        ),
        migrations.AddField(
            model_name='database',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.environment'),
        ),
        migrations.AddField(
            model_name='database',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.host'),
        ),
        migrations.AddField(
            model_name='database',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.project'),
        ),
        migrations.AddField(
            model_name='backup',
            name='database',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backup_manager.database'),
        ),
    ]
